@page "{category?}"
@model CITUCrate.Pages.Buyer.BuyerCategoriesModel
@{
    Layout = "_BuyerLayout";
    ViewData["Title"] = Model.Category ?? "All Categories";
}
<link rel="stylesheet" href="~/css/buyercategories.css" />
<style>
    .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    text-align: center;
    }

    .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    }

    .close:hover,
    .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
    }

    .quantity-selector {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin: 10px 0;
    }
</style>
<section class="banner-section">
    <img src="~/images/cratebanner1.png" class="banner" />
</section>

<section class="product-section">
    <h1>@Model.Category</h1>

    @if (Model.Products != null && Model.Products.Any())
    {
        <div class="product-grid" id="productGrid">
            @foreach (var product in Model.Products.Take(15))
            {
                <div class="product-item" data-id="@product.ID" data-name="@product.Name"
                     data-price="@product.Price" data-description="@product.ShortDescription"
                     data-image="@product.ImageUrl">
                    <div class="pic-container">
                        <img src="@product.ImageUrl" alt="@product.Name" />
                    </div>
                    <h3>@product.Name</h3>
                    <p>Price: $@product.Price</p>
                </div>
            }
        </div>
        <button id="seeMoreBtn">See More</button>
    }
    else
    {
        <p>No products found in this category.</p>
    }
</section>

<!-- Modal -->
<div id="product-modal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <div class="modal-body">
            <img id="modal-image" src="" alt="Product Image">
            <h3 id="modal-name"></h3>
            <p id="modal-price"></p>
            <p id="modal-description"></p>
            <div class="quantity-controls">
                <button onclick="decreaseQuantity()">-</button>
                <span id="quantity">1</span>
                <button onclick="increaseQuantity()">+</button>
            </div>
            <label for="delivery-location">Location to deliver:</label>
            <input type="text" id="delivery-location" name="deliveryLocation" placeholder="Enter delivery location">
            <form id="add-to-cart-form" method="post" asp-page="/Buyer/BuyerCategories" asp-page-handler="AddToOrder">
                <input type="hidden" id="product-id" name="productId" value="">
                <input type="hidden" id="product-quantity" name="quantity" value="1">
                <input type="hidden" id="form-delivery-location" name="deliveryLocation" value="">
                <button type="submit" id="add-to-cart">Add To Order</button>
            </form>

        </div>
    </div>
</div>



@section Scripts {
    <script>
        const modal = document.getElementById('product-modal');
        const closeModalBtn = modal.querySelector('.close');
        const quantityDisplay = document.getElementById('quantity');
        const deliveryLocationInput = document.getElementById('delivery-location');
        const addToCartForm = document.getElementById('add-to-cart-form');
        const productIdInput = document.getElementById('product-id');
        const productQuantityInput = document.getElementById('product-quantity');
        const formDeliveryLocationInput = document.getElementById('form-delivery-location');

        let selectedProduct = null;
        let quantity = 1;

        // Add event listeners to product grid
        document.querySelectorAll('.product-item').forEach(productItem => {
            productItem.addEventListener('click', function () {
                selectedProduct = {
                    id: productItem.dataset.id,
                    name: productItem.dataset.name,
                    price: productItem.dataset.price,
                    description: productItem.dataset.description,
                    imageUrl: productItem.dataset.image
                };

                // Populate modal with product details
                document.getElementById('modal-image').src = selectedProduct.imageUrl;
                document.getElementById('modal-name').textContent = selectedProduct.name;
                document.getElementById('modal-price').textContent = '$' + selectedProduct.price;
                document.getElementById('modal-description').textContent = selectedProduct.description;
                quantityDisplay.textContent = quantity = 1; // Reset quantity
                productIdInput.value = selectedProduct.id; // Set hidden product ID field

                modal.style.display = 'block'; // Show modal
            });
        });

        // Close modal
        closeModalBtn.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        window.addEventListener('click', (e) => {
            if (e.target === modal) modal.style.display = 'none';
        });

        // Update quantity
        function decreaseQuantity() {
            if (quantity > 1) {
                quantity--;
                updateQuantityDisplay();
            }
        }

        function increaseQuantity() {
            quantity++;
            updateQuantityDisplay();
        }

        function updateQuantityDisplay() {
            quantityDisplay.textContent = quantity;
            productQuantityInput.value = quantity; // Update hidden form field
        }

        // Ensure delivery location is provided before form submission
        addToCartForm.addEventListener('submit', function (event) {
            const deliveryLocation = deliveryLocationInput.value.trim();
            if (!deliveryLocation) {
                event.preventDefault();
                alert('Please provide a delivery location.');
                return;
            }
            formDeliveryLocationInput.value = deliveryLocation; // Set hidden delivery location field
        });
    </script>
}
